apiVersion: apps/v1
kind: Deployment
metadata:
  name: apache
  labels:
    app.kubernetes.io/instance: apache
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: apache
    app.kubernetes.io/version: 2.4.65
    helm.sh/chart: apache-11.4.1
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/instance: apache
      app.kubernetes.io/name: apache
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: apache
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: apache
        app.kubernetes.io/version: 2.4.65
        helm.sh/chart: apache-11.4.1
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/instance: apache
                  app.kubernetes.io/name: apache
              topologyKey: kubernetes.io/hostname
            weight: 1
      automountServiceAccountToken: false
      containers:
      - env:
        - name: BITNAMI_DEBUG
          value: "false"
        - name: APACHE_HTTP_PORT_NUMBER
          value: "8080"
        - name: APACHE_HTTPS_PORT_NUMBER
          value: "8443"
        image: docker.io/bitnami/apache:2.4.65-debian-12-r0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 6
          initialDelaySeconds: 180
          periodSeconds: 20
          successThreshold: 1
          tcpSocket:
            port: http
          timeoutSeconds: 5
        name: apache
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 8443
          name: https
          protocol: TCP
        readinessProbe:
          failureThreshold: 6
          httpGet:
            path: /
            port: http
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 150m
            ephemeral-storage: 2Gi
            memory: 192Mi
          requests:
            cpu: 100m
            ephemeral-storage: 50Mi
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/bitnami/apache/conf
          name: empty-dir
          subPath: app-conf-dir
        - mountPath: /opt/bitnami/apache/logs
          name: empty-dir
          subPath: app-logs-dir
        - mountPath: /tmp
          name: empty-dir
          subPath: tmp-dir
        - mountPath: /opt/bitnami/apache/var/run
          name: empty-dir
          subPath: app-tmp-dir
      dnsPolicy: ClusterFirst
      hostAliases:
      - hostnames:
        - status.localhost
        ip: 127.0.0.1
      initContainers:
      - args:
        - -ec
        - |
          #!/bin/bash

          . /opt/bitnami/scripts/libfs.sh
          # We copy the logs folder because it has symlinks to stdout and stderr
          if ! is_dir_empty /opt/bitnami/apache/logs; then
            cp -r /opt/bitnami/apache/logs /emptydir/app-logs-dir
          fi
        command:
        - /bin/bash
        image: docker.io/bitnami/apache:2.4.65-debian-12-r0
        imagePullPolicy: IfNotPresent
        name: preserve-logs-symlinks
        resources:
          limits:
            cpu: 150m
            ephemeral-storage: 2Gi
            memory: 192Mi
          requests:
            cpu: 100m
            ephemeral-storage: 50Mi
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /emptydir
          name: empty-dir
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroupChangePolicy: Always
      serviceAccount: apache
      serviceAccountName: apache
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: empty-dir
